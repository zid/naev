include build/Makefile.common

#
#   CFLAGS
#
CLUA   := -Ilib/lua
CCSPARSE := -Ilib/csparse
CSDL   := $(shell sdl-config --cflags) -DGL_GLEXT_PROTOTYPES
CXML   := $(shell xml2-config --cflags)
CTTF   := $(shell freetype-config --cflags)
CPNG   := $(shell libpng-config --cflags)
CGL    :=
CFLAGS := -Isrc $(CLUA) $(CCSPARSE) $(CSDL) $(CXML) $(CTTF) $(CPNG) $(CGL) $(VERSION) -D$(OS) $(COMMON_CFLAGS)



#
#   LDFLAGS
#
LDLUA   := lib/lua/liblua.a
LDCSPARSE := lib/csparse/libcsparse.a
LDSDL   := $(shell sdl-config --libs) -lSDL_image
LDSOUND :=
ifeq ($(USE_SDLMIX),1)
LDSOUND += -lSDL_mixer
endif
ifeq ($(USE_OPENAL),1)
LDSOUND += -lopenal -lvorbisfile
endif
LDXML   := $(shell xml2-config --libs)
LDTTF   := $(shell freetype-config --libs)
LDPNG   := $(shell libpng-config --libs)
LDGL    := -lGL
LDFLAGS := -lm $(LDLUA) $(LDCSPARSE) $(LDSDL) $(LDXML) $(LDTTF) $(LDPNG) $(LDGL) $(LDSOUND) -pg

# Debug stuff
ifdef DEBUG
CFLAGS += -W -Wall -Wextra -Wunused -Wshadow -Wpointer-arith -Wmissing-prototypes -Winline -Wcast-align -Wmissing-declarations -fstack-protector -fstack-protector-all -g -ansi

# Handle OS Debug stuff here.
#
# Linux stuff
#
ifeq ($(OS),LINUX)
CFLAGS += -DGIT_COMMIT="\"$(shell git rev-parse HEAD 2> /dev/null)\""
LDFLAGS += -lbfd -rdynamic
endif # LINUX

else # DEBUG
CFLAGS += -O2 -pipe -ansi

endif # DEBUG

ifeq ($(OS),MACOSX)
LDFLAGS += 	-framework OpenGL \
				-L/System/Library/Frameworks/OpenGL.framework/Versions/Current/Libraries 
endif # MACOSX


DEPS := $(OBJS:%.o=%.d)


#
#   TARGETS
#
.PHONY: all help lua csparse utils docs clean distclean


all:	utils ndata lua csparse naev


%.d: %.c
	@$(CC) -MT $(<:.c=.o) -MM $(CFLAGS) $< > $@
	@echo "   DEP  $@"

-include $(DEPS)

%.o: %.c
	@$(CC) -c $(CFLAGS) -o $@ $<
	@echo "   CC   $@"


help:
	@echo "Possible targets are:":
	@echo "       lua - builds Lua support"
	@echo "   csparse - builds CSparse support"
	@echo "      naev - builds the naev binary"
	@echo "     mkpsr - builds the mkspr utilitily"
	@echo "     ndata - creates the ndata file"
	@echo "     utils - builds all the utilities"
	@echo "      docs - creates the doxygen documentation"
	@echo "     clean - removes naev's main binary and ndata file"
	@echo " distclean - removes everything done"


$(APPNAME): $(OBJS)
	@$(CC) -o $(APPNAME) $(OBJS) lib/lua/liblua.a lib/csparse/libcsparse.a $(LDFLAGS) 
	@echo "   LD   $(APPNAME)"


lua: lib/lua/liblua.a


lib/lua/liblua.a:
	+@$(MAKE) -C lib/lua a


csparse: lib/csparse/libcsparse.a


lib/csparse/libcsparse.a:
	+@$(MAKE) -C lib/csparse


pack: src/md5.o src/pack.o utils/pack/main.o
	+@$(MAKE) -C utils/pack


mkspr: utils/mkspr/main.o
	+@$(MAKE) -C utils/mkspr


$(VERSIONFILE):
	@echo -n "$(VMAJOR).$(VMINOR).$(VREV)" > $(VERSIONFILE)


ndata: pack $(DATAFILES)
	@echo -n "$(VMAJOR).$(VMINOR).$(VREV)" > $(VERSIONFILE)
	@echo "   DAT  ndata"
	@./pack $(DATA) $(DATAFILES)


utils: pack mkspr


docs:
	+@$(MAKE) -C docs/


clean:
	@echo "   Removing ndata"
	@$(RM) $(DATA)
	@echo "   Removing object files"
	@$(RM) $(OBJS) $(DEPS)
	@echo "   Removing main binary ($(APPNAME))"
	@$(RM) $(APPNAME)


distclean: clean
	@echo "   Cleaning utilities"
	@$(MAKE) -C utils/pack clean
	@$(MAKE) -C utils/mkspr clean
	@echo "   Cleaning Lua"
	@$(MAKE) -C lib/lua distclean
	@echo "   Cleaning CSparse"
	@$(MAKE) -C lib/csparse distclean
	@echo "   Removing build tool binaries"
	@$(RM) mkspr pack


